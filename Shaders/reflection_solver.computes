#version 430 core

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

uniform uint display_mode;
uniform uint total_points;
uniform uint num_mirrors;
uniform uint window_width;
uniform uint window_height;
uniform vec2 cursor;

uniform vec3 norm_vecs[8];



layout(binding = 0) buffer lName1{
	int reflection_index_ssbo[];
}reflections;

layout(binding = 1) buffer lName2{
	uint point_tally_ssbo[];
}points;


vec2 unitNorm;
float offset;

void main()
{
	uint flatIndex = gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * gl_NumWorkGroups.x * 128) + (gl_GlobalInvocationID.z * gl_NumWorkGroups.x * 128 * gl_NumWorkGroups.y);

	if(flatIndex >= total_points){
		return;
	}


	vec2 pointLocation = cursor.xy;
	int r = reflections.reflection_index_ssbo[flatIndex];

	int isNegative = 0;
	if ((r < 0) || (r == 0)){
		r = r * -1;
		isNegative = 1;
	}

	while(r != 0){
		
		unitNorm = norm_vecs[r % num_mirrors].xy;
		offset = norm_vecs[r % num_mirrors].z;

		r = int(r/num_mirrors);

		pointLocation = vec2(pointLocation.x, pointLocation.y - offset);
		pointLocation = pointLocation - (dot(unitNorm, pointLocation) * unitNorm * 2);
		pointLocation = vec2(pointLocation.x, pointLocation.y + offset);

	}
	
	if(isNegative == 1){
		unitNorm = norm_vecs[0].xy;
		offset = norm_vecs[0].z;
		pointLocation = vec2(pointLocation.x, pointLocation.y - offset);
		pointLocation = pointLocation - (dot(unitNorm, pointLocation) * unitNorm * 2);
		pointLocation = vec2(pointLocation.x, pointLocation.y + offset);
	}


	if(((pointLocation.x >= -1) && (pointLocation.x < 1)) && ((pointLocation.y >= -1) && (pointLocation.y < 1))){
		uint screen_x = uint((pointLocation.x + 1) * (window_width / 2));
		uint screen_y = (window_height - 1) - uint((pointLocation.y + 1) * (window_height / 2));

		if(display_mode == 0){
			points.point_tally_ssbo[screen_x + (screen_y * window_width)] = 1;
		}
		else if(display_mode == 1){
			points.point_tally_ssbo[screen_x + (screen_y * window_width)] = 100;
		}
		else if(display_mode == 2){
			points.point_tally_ssbo[screen_x + (screen_y * window_width)]++;
		}
		points.point_tally_ssbo[screen_x + (screen_y * window_width)] = 100;
	}

}