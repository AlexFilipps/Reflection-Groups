#version 430 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(binding = 1) buffer lName2{
	uint point_tally_ssbo[];
}points;


layout (binding = 0, rgba32f) uniform writeonly image2D density_texture;

uniform uint window_width;
uniform uint window_height;

uint max_dist = 20;

void main(){
	ivec2 coord = ivec2(gl_GlobalInvocationID.x, window_height - gl_GlobalInvocationID.y);
	//imageStore(density_texture, coord, vec4(1.0, 0.0, 1.0, 1.0));


	uint pixel_index = gl_GlobalInvocationID.x + (gl_GlobalInvocationID.y * window_width);
	if(points.point_tally_ssbo[pixel_index] > 0){
		//imageStore(density_texture, coord, vec4(1.0, 1.0, 1.0, 1.0));
	}
	else{
		//imageStore(density_texture, coord, vec4(0.0, 0.0, 0.0, 1.0));
	}

	float max_dist_sqr = (pow(max_dist, 2));

	float tally = 0;
	ivec2 coord_offset = ivec2(coord.x - max_dist, coord.y - max_dist);
	for(int i = 0; i < (max_dist * 2) + 1; i++){
		for(int j = 0; j < (max_dist * 2) + 1; j++){
			if(((coord_offset.x + i) >= 0) && ((coord_offset.x + i) < window_width) && ((coord_offset.y + j) >= 0) && ((coord_offset.y + j) < window_height)){
				float dist = (pow(((coord_offset.x + i) - coord.x), 2) + pow(((coord_offset.y + j) - coord.y), 2));
				if(dist <= max_dist_sqr){
					tally += points.point_tally_ssbo[(gl_GlobalInvocationID.x - max_dist + i) + ((gl_GlobalInvocationID.y - max_dist + j) * window_width)] * (max_dist_sqr - dist);
				}
			}
		}
	}


	if(tally > 0){
		float density = (tally / max_dist_sqr) / 2000;
		if(density > 1){
			density = 1.0;
		}
		//imageStore(density_texture, coord, vec4(1.0 - density, 0.0, density, 1.0));
		imageStore(density_texture, coord, vec4(density, density, density, 1.0));
	}
	else{
		imageStore(density_texture, coord, vec4(0.0, 0.0, 0.0, 1.0));
	}
}